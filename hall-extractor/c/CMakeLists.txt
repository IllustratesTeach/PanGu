PROJECT(hall-extractor4j)
CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

SET(NIRVANA_VERSION_MAJOR 8)
SET(NIRVANA_VERSION_MINOR 15)
SET(NIRVANA_VERSION_PATCH 3)
SET(NIRVANA_VERSION_PATCH_2 17)

INCLUDE(CheckIncludeFiles)


# java jni support
FIND_PACKAGE(Java REQUIRED)
FIND_PACKAGE(JNI REQUIRED)
#INCLUDE(UseJava)
INCLUDE_DIRECTORIES(${JAVA_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${JAVA_INCLUDE_PATH2})

#define some variable
IF(WIN32)
  IF(NOT DEFINED ARCH)
    MESSAGE(FATAL_ERROR "ARCH not defined,pls use -DARCH=(w32|w64) to define")
  ENDIF()
  IF(NOT DEFINED KERNEL_DIR)
    MESSAGE(FATAL_ERROR "KERNEL_DIR not defined,pls use -DKERNEL_DIR=(w32|w64) to define")
  ENDIF()
ENDIF()

INCLUDE_DIRECTORIES(${KERNEL_DIR}/include)

FILE(GLOB_RECURSE HALL_EXTRACTOR_JNI_SOURCES ${PROJECT_SOURCE_DIR}/src/*)
LIST(APPEND HALL_EXTRACTOR_JNI_SOURCES ${PROJECT_SOURCE_DIR}/../../hall-image/c/src/jni/jni_helper.cc)
ADD_LIBRARY(hall-extractor4j SHARED ${HALL_EXTRACTOR_JNI_SOURCES})
IF(WIN32)
  IF($ARCH MATCHES "w64")
    FIND_LIBRARY(TEXFDLL
            NAME texfdll64
            PATHS "${KERNEL_DIR}\\build-w64\\src"
            DOC "texfdll release library")
  ELSE()
    FIND_LIBRARY(TEXFDLL
            NAME texfdll
            PATHS "${KERNEL_DIR}\\build-w32\\src"
            DOC "texfdll release library")
  ENDIF()
  TARGET_LINK_LIBRARIES(hall-extractor4j ${TEXFDLL})
ELSE()
  TARGET_LINK_LIBRARIES(hall-extractor4j nirvana-kernel)
ENDIF()


