package nirvana.hall.v70.internal.adapter.gz.jpa

;
// Generated 2017-6-29 16:56:26 by Stark Activerecord generator 4.3.1.Final


import javax.persistence._

import stark.activerecord.services.{ActiveRecord, ActiveRecordInstance};

/**
  * GafisCase generated by stark activerecord generator
  */
object GafisGatherCertificate extends ActiveRecordInstance[GafisGatherCertificate]

@Entity
@Table(name = "GAFIS_GATHER_CERTIFICATE"
)
class GafisGatherCertificate extends ActiveRecord {

  @Id
  @Column(name = "PK_ID", unique = true, nullable = false, length = 32)
  var pkId: java.lang.String = _
  @Column(name = "PERSONID", length = 23)
  var personId: java.lang.String = _
  @Column(name = "CERTIFICATETYPE", length = 3)
  var certificateType: java.lang.String = _
  @Column(name = "CERTIFICATEID", length = 90)
  var certificateId: java.lang.String = _
  @Column(name = "ISSUEUNIT", length = 60)
  var issueUnit: java.lang.String = _
  @Temporal(TemporalType.DATE)
  @Column(name = "SIGNDATE", length = 8)
  var signDate: java.util.Date = _
  @Temporal(TemporalType.DATE)
  @Column(name = "VALIDITYBEGIN", length = 8)
  var validityBegin: java.util.Date = _
  @Temporal(TemporalType.DATE)
  @Column(name = "VALIDITYEND", length = 8)
  var validityEnd: java.util.Date = _
  @Column(name = "IFTRUE", length = 1)
  var ifTrue: java.lang.String = _
  @Column(name = "HOLDER", length = 60)
  var holder: java.lang.String = _
  @Column(name = "INPUTPSN", length = 32)
  var inputpsn: java.lang.String = _
  @Temporal(TemporalType.DATE)
  @Column(name = "INPUTTIME", length = 8)
  var inputtime: java.util.Date = _
  @Column(name = "MODIFIEDPSN", length = 32)
  var modifiedpsn: java.lang.String = _
  @Temporal(TemporalType.TIMESTAMP)
  @Column(name = "MODIFIEDTIME", length = 14)
  var modifiedtime: java.util.Date = _
  @Column(name = "DELETAG", length = 1)
  var deletag: java.lang.String = _




  def this(personId: java.lang.String) {
    this()
    this.personId = personId
  }

  def this(personId: java.lang.String, certificateType: java.lang.String, certificateId: java.lang.String,
           issueUnit: java.lang.String, signDate: java.util.Date, validityBegin: java.util.Date,
           validityEnd:  java.util.Date, ifTrue: java.lang.String,holder:  java.lang.String,
           inputtime: java.util.Date, modifiedpsn: java.lang.String, modifiedtime: java.util.Date,
           deletag: java.lang.String) {
    this()
    this.personId = personId
    this.certificateType = certificateType
    this.certificateId = certificateId
    this.issueUnit = issueUnit
    this.signDate = signDate
    this.validityBegin = validityBegin
    this.validityEnd = validityEnd
    this.ifTrue = ifTrue
    this.holder = holder
    this.inputpsn = inputpsn
    this.inputtime = inputtime
    this.modifiedpsn = modifiedpsn
    this.modifiedtime = modifiedtime
    this.deletag = deletag
  }


}


