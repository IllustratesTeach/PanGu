
package nirvana.hall.webservice.survey.gz.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "HandprintServicePortType", targetNamespace = "http://service")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface HandprintServicePortType {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "getSystemDateTime", targetNamespace = "http://service", className = "com.pspot.xk.GetSystemDateTime")
    @ResponseWrapper(localName = "getSystemDateTimeResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetSystemDateTimeResponse")
    public String getSystemDateTime();

    /**
     * 
     * @param data
     * @param userName
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FBMatchCancel")
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "FBMatchCancel", targetNamespace = "http://service", className = "com.pspot.xk.FBMatchCancel")
    @ResponseWrapper(localName = "FBMatchCancelResponse", targetNamespace = "http://service", className = "com.pspot.xk.FBMatchCancelResponse")
    public String fbMatchCancel(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "data", targetNamespace = "http://service")
                    byte[] data);

    /**
     * 
     * @param in2
     * @param in1
     * @param in3
     * @param in0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://service")
    @RequestWrapper(localName = "getPalmOriginalData", targetNamespace = "http://service", className = "com.pspot.xk.GetPalmOriginalData")
    @ResponseWrapper(localName = "getPalmOriginalDataResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetPalmOriginalDataResponse")
    public byte[] getPalmOriginalData(
            @WebParam(name = "in0", targetNamespace = "http://service")
                    String in0,
            @WebParam(name = "in1", targetNamespace = "http://service")
                    String in1,
            @WebParam(name = "in2", targetNamespace = "http://service")
                    String in2,
            @WebParam(name = "in3", targetNamespace = "http://service")
                    String in3);

    /**
     * 
     * @param cardtype
     * @param sNo
     * @param identificationNo
     * @param userName
     * @param kNo
     * @param identificationFile
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FBIdentifyResult")
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "FBIdentifyResult", targetNamespace = "http://service", className = "com.pspot.xk.FBIdentifyResult")
    @ResponseWrapper(localName = "FBIdentifyResultResponse", targetNamespace = "http://service", className = "com.pspot.xk.FBIdentifyResultResponse")
    public String fbIdentifyResult(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "Identification_no", targetNamespace = "http://service")
                    String identificationNo,
            @WebParam(name = "Identification_file", targetNamespace = "http://service")
                    byte[] identificationFile,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "SNo", targetNamespace = "http://service")
                    String sNo,
            @WebParam(name = "Cardtype", targetNamespace = "http://service")
                    String cardtype);

    /**
     * 
     * @param userName
     * @param kNo
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "getCaseNo", targetNamespace = "http://service", className = "com.pspot.xk.GetCaseNo")
    @ResponseWrapper(localName = "getCaseNoResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetCaseNoResponse")
    public String getCaseNo(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo);

    /**
     * 
     * @param cardtype
     * @param sNo
     * @param userName
     * @param kNo
     * @param passwrod
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "http://service")
    @RequestWrapper(localName = "getOriginalDataFormally", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataFormally")
    @ResponseWrapper(localName = "getOriginalDataFormallyResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataFormallyResponse")
    public byte[] getOriginalDataFormally(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "SNo", targetNamespace = "http://service")
                    String sNo,
            @WebParam(name = "Cardtype", targetNamespace = "http://service")
                    String cardtype);

    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "syncFpt", targetNamespace = "http://service", className = "com.pspot.xk.SyncFpt")
    @ResponseWrapper(localName = "syncFptResponse", targetNamespace = "http://service", className = "com.pspot.xk.SyncFptResponse")
    public void syncFpt();

    /**
     * 
     * @param updateTimeTo
     * @param updateTimeFrom
     * @param userName
     * @param endNum
     * @param startNum
     * @param kNo
     * @param unitCode
     * @param passwrod
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "http://service")
    @RequestWrapper(localName = "getOriginalDataList", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataList")
    @ResponseWrapper(localName = "getOriginalDataListResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataListResponse")
    public byte[] getOriginalDataList(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "UnitCode", targetNamespace = "http://service")
                    String unitCode,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "UpdateTimeFrom", targetNamespace = "http://service")
                    String updateTimeFrom,
            @WebParam(name = "UpdateTimeTo", targetNamespace = "http://service")
                    String updateTimeTo,
            @WebParam(name = "StartNum", targetNamespace = "http://service")
                    int startNum,
            @WebParam(name = "EndNum", targetNamespace = "http://service")
                    int endNum);

    /**
     * 
     * @param cardNo
     * @param cardtype
     * @param sNo
     * @param resultType
     * @param userName
     * @param kNo
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FBUseCondition")
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "FBUseCondition", targetNamespace = "http://service", className = "com.pspot.xk.FBUseCondition")
    @ResponseWrapper(localName = "FBUseConditionResponse", targetNamespace = "http://service", className = "com.pspot.xk.FBUseConditionResponse")
    public String fbUseCondition(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "SNo", targetNamespace = "http://service")
                    String sNo,
            @WebParam(name = "Cardtype", targetNamespace = "http://service")
                    String cardtype,
            @WebParam(name = "CardNo", targetNamespace = "http://service")
                    String cardNo,
            @WebParam(name = "Result_type", targetNamespace = "http://service")
                    String resultType);

    /**
     * 
     * @param cardtype
     * @param sNo
     * @param userName
     * @param kNo
     * @param passwrod
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "http://service")
    @RequestWrapper(localName = "getOriginalData", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalData")
    @ResponseWrapper(localName = "getOriginalDataResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataResponse")
    public byte[] getOriginalData(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "SNo", targetNamespace = "http://service")
                    String sNo,
            @WebParam(name = "Cardtype", targetNamespace = "http://service")
                    String cardtype);

    /**
     * 
     * @param data
     * @param userName
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FBMatchCondition")
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "FBMatchCondition", targetNamespace = "http://service", className = "com.pspot.xk.FBMatchCondition")
    @ResponseWrapper(localName = "FBMatchConditionResponse", targetNamespace = "http://service", className = "com.pspot.xk.FBMatchConditionResponse")
    public String fbMatchCondition(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "data", targetNamespace = "http://service")
                    byte[] data);

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @param in5
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://service")
    @RequestWrapper(localName = "feedbackOriginalDataStatus", targetNamespace = "http://service", className = "com.pspot.xk.FeedbackOriginalDataStatus")
    @ResponseWrapper(localName = "feedbackOriginalDataStatusResponse", targetNamespace = "http://service", className = "com.pspot.xk.FeedbackOriginalDataStatusResponse")
    public String feedbackOriginalDataStatus(
            @WebParam(name = "in0", targetNamespace = "http://service")
                    String in0,
            @WebParam(name = "in1", targetNamespace = "http://service")
                    String in1,
            @WebParam(name = "in2", targetNamespace = "http://service")
                    String in2,
            @WebParam(name = "in3", targetNamespace = "http://service")
                    String in3,
            @WebParam(name = "in4", targetNamespace = "http://service")
                    String in4,
            @WebParam(name = "in5", targetNamespace = "http://service")
                    String in5);

    /**
     * 
     * @param data
     * @param userName
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "insertOriginalData", targetNamespace = "http://service", className = "com.pspot.xk.InsertOriginalData")
    @ResponseWrapper(localName = "insertOriginalDataResponse", targetNamespace = "http://service", className = "com.pspot.xk.InsertOriginalDataResponse")
    public String insertOriginalData(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "data", targetNamespace = "http://service")
                    byte[] data);

    /**
     * 
     * @param in2
     * @param in1
     * @param in4
     * @param in3
     * @param in0
     * @param in5
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "FBFPTData")
    @WebResult(name = "out", targetNamespace = "http://service")
    @RequestWrapper(localName = "FBFPTData", targetNamespace = "http://service", className = "com.pspot.xk.FBFPTData")
    @ResponseWrapper(localName = "FBFPTDataResponse", targetNamespace = "http://service", className = "com.pspot.xk.FBFPTDataResponse")
    public String fbfptData(
            @WebParam(name = "in0", targetNamespace = "http://service")
                    String in0,
            @WebParam(name = "in1", targetNamespace = "http://service")
                    String in1,
            @WebParam(name = "in2", targetNamespace = "http://service")
                    String in2,
            @WebParam(name = "in3", targetNamespace = "http://service")
                    String in3,
            @WebParam(name = "in4", targetNamespace = "http://service")
                    byte[] in4,
            @WebParam(name = "in5", targetNamespace = "http://service")
                    byte[] in5);

    /**
     * 
     * @param in1
     * @param in0
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(name = "out", targetNamespace = "http://service")
    @RequestWrapper(localName = "getOriginalDataSingle", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataSingle")
    @ResponseWrapper(localName = "getOriginalDataSingleResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataSingleResponse")
    public byte[] getOriginalDataSingle(
            @WebParam(name = "in0", targetNamespace = "http://service")
                    String in0,
            @WebParam(name = "in1", targetNamespace = "http://service")
                    String in1);

    /**
     * 
     * @param userName
     * @param kNo
     * @param passwrod
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(name = "Operation_result", targetNamespace = "http://service")
    @RequestWrapper(localName = "getReceptionNo", targetNamespace = "http://service", className = "com.pspot.xk.GetReceptionNo")
    @ResponseWrapper(localName = "getReceptionNoResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetReceptionNoResponse")
    public String getReceptionNo(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo);

    /**
     * 
     * @param updateTimeTo
     * @param updateTimeFrom
     * @param userName
     * @param kNo
     * @param unitCode
     * @param passwrod
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(name = "data", targetNamespace = "http://service")
    @RequestWrapper(localName = "getOriginalDataCount", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataCount")
    @ResponseWrapper(localName = "getOriginalDataCountResponse", targetNamespace = "http://service", className = "com.pspot.xk.GetOriginalDataCountResponse")
    public int getOriginalDataCount(
            @WebParam(name = "UserName", targetNamespace = "http://service")
                    String userName,
            @WebParam(name = "Passwrod", targetNamespace = "http://service")
                    String passwrod,
            @WebParam(name = "UnitCode", targetNamespace = "http://service")
                    String unitCode,
            @WebParam(name = "KNo", targetNamespace = "http://service")
                    String kNo,
            @WebParam(name = "UpdateTimeFrom", targetNamespace = "http://service")
                    String updateTimeFrom,
            @WebParam(name = "UpdateTimeTo", targetNamespace = "http://service")
                    String updateTimeTo);

}
