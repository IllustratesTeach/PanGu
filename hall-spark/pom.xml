<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!--
     Copyright 2014,2015 Jun Tsai. All rights reserved.
     site: http://www.ganshane.com
  -->

  <modelVersion>4.0.0</modelVersion>
  <artifactId>hall-spark</artifactId>
  <name>Nirvana Hall Spark Processor Server</name>
  <parent>
    <groupId>nirvana</groupId>
    <artifactId>nirvana-hall</artifactId>
    <version>dev-SNAPSHOT</version>
  </parent>
  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.11</artifactId>
      <version>1.6.0</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka_2.11</artifactId>
      <version>1.6.0</version>
      <!--<scope>provided</scope>-->
    </dependency>
    <dependency>
      <groupId>nirvana</groupId>
      <artifactId>hall-protocol</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <!--
        <exclusion>
          <groupId>org.apache.tapestry</groupId>
          <artifactId>tapestry-json</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.apache.tapestry</groupId>
          <artifactId>tapestry-ioc</artifactId>
        </exclusion>
        -->
      </exclusions>
    </dependency>
    <dependency>
      <groupId>nirvana</groupId>
      <artifactId>hall-support</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.tapestry</groupId>
          <artifactId>tapestry-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.ganshane.monad</groupId>
      <artifactId>monad-support</artifactId>
      <version>5.0.18</version>
    </dependency>
    <dependency>
      <groupId>nirvana</groupId>
      <artifactId>hall-extractor</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.ganshane.monad</groupId>
          <artifactId>monad-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.ganshane.monad</groupId>
          <artifactId>monad-rpc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
        <!-- tapestry framework -->
        <exclusion>
          <groupId>org.apache.tapestry</groupId>
          <artifactId>tapestry-core</artifactId>
        </exclusion>
        <!-- jetty@eclipse -->
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-servlet</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jul-to-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.xsocket</groupId>
          <artifactId>xSocket</artifactId>
        </exclusion>
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>nirvana</groupId>
      <artifactId>hall-image</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>com.ganshane.monad</groupId>
          <artifactId>monad-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.ganshane.monad</groupId>
          <artifactId>monad-rpc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
        <!-- tapestry framework -->
        <exclusion>
          <groupId>org.apache.tapestry</groupId>
          <artifactId>tapestry-core</artifactId>
        </exclusion>
        <!-- jetty@eclipse -->
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-server</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-servlet</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jul-to-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.xsocket</groupId>
          <artifactId>xSocket</artifactId>
        </exclusion>
        <!-- mysql database driver -->
        <exclusion>
          <groupId>commons-io</groupId>
          <artifactId>commons-io</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.fusesource.jansi</groupId>
          <artifactId>jansi</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>nirvana</groupId>
      <artifactId>hall-c</artifactId>
      <version>${project.version}</version>
    </dependency>
    <!-- httpclient -->
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>4.5.1</version>
    </dependency>
    <dependency>
      <groupId>com.zaxxer</groupId>
      <artifactId>HikariCP-java6</artifactId>
      <version>2.3.7</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala-release-version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.6</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-source</goal>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <scalaVersion>${scala-release-version}</scalaVersion>
          <args>
            <arg>-unchecked</arg>
            <arg>-deprecation</arg>
            <arg>-encoding</arg>
            <arg>UTF-8</arg>
          </args>
          <!--
          <compilerPlugins>
            <compilerPlugin>
              <groupId>org.scalamacros</groupId>
              <artifactId>paradise_${scala-release-version}</artifactId>
              <version>2.1.0</version>
            </compilerPlugin>
          </compilerPlugins>
          -->
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
          <optimize>true</optimize>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
              <excludeScope>provided</excludeScope>
              <includeScope>runtime</includeScope>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
          <execution>
            <id>copy-dependencies-all</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>compile</includeScope>
              <outputDirectory>${project.build.directory}/dependencies-all</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.4.3</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation = "org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>nirvana.hall.spark.services.BigDataStream</mainClass>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/license*</exclude>
                    <exclude>META-INF/L*</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
              <relocations>
                <relocation>
                  <pattern>com.google.protobuf</pattern>
                  <shadedPattern>nirvana.protobuf_2_6_1</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.fusesource.hawtjni.runtime</pattern>
                  <shadedPattern>nirvana.fusesource</shadedPattern>
                </relocation>
              </relocations>
              <artifactSet>
                <excludes>
                  <exclude>org.scala-lang:*</exclude>
                  <!--<exclude>org.apache.spark:*</exclude>-->
                  <exclude>org.slf4j:*</exclude>
                  <exclude>log4j:*</exclude>
                </excludes>
              </artifactSet>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <properties>
    <scala-release-version>2.11.7</scala-release-version>
  </properties>
</project>
