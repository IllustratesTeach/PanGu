package api;
import "monad/rpc/protocol/command.proto";
import "matcher/match_task_query.proto";
import "matcher/match_result.proto";

option java_package = "nirvana.hall.protocol.api";
option java_outer_classname = "QueryProto";

//查询接口 cmd[10500-10599]
//发送查询
message QuerySendRequest {
    extend monad.rpc.protocol.BaseCommand{
        optional QuerySendRequest cmd = 10500;
    }
    required matcher.MatchTask matchTask = 1;
    //记录exception
    optional string uuid = 2;
    //传送远程接收端IP，用于存日志表
    optional string ip = 3;
}
message QuerySendResponse {
    extend monad.rpc.protocol.BaseCommand{
        optional QuerySendResponse cmd = 10501;
    }
    required int64 ora_sid = 1;
}

//获取查询结果
message QueryGetRequest {
    extend monad.rpc.protocol.BaseCommand{
        optional QueryGetRequest cmd = 10502;
    }
    required int64 ora_sid = 1;
    //记录exception
    optional string uuid = 2;
    //传送远程接收端IP，用于存日志表
    optional string ip = 3;
}
message QueryGetResponse {
    extend monad.rpc.protocol.BaseCommand{
        optional QueryGetResponse cmd = 10503;
    }
    required bool isComplete = 1 [default = true];
    optional matcher.MatchResult matchResult = 2;
}

//标采发送查询
message QuerySendCaptureRequest {
    extend monad.rpc.protocol.BaseCommand{
        optional QuerySendCaptureRequest cmd = 10504;
    }
    required matcher.MatchTask matchTask = 1;
}
message QuerySendCaptureResponse {
    extend monad.rpc.protocol.BaseCommand{
        optional QuerySendCaptureResponse cmd = 10505;
    }
    required int64 ora_sid = 1;
}
